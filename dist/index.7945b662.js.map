{"mappings":"AE0MA,MAAM,EAAU,SAAS,aAAa,CAAC,oBAIvC,AAFwB,IA5MxB,MACI,YAAY,CAAO,CAAE,CACjB,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,eAAe,CAAG,CAAC,WAAY,OAAO,CAC3C,IAAI,CAAC,YAAY,CAAG,CAChB,CACI,GAAM,IACN,IAAO,yDACP,MAAS,uCACb,EACA,CACI,GAAM,IACN,IAAO,4DACP,MAAS,8BACb,EACA,CACI,GAAM,IACN,IAAO,2DACP,MAAS,4BACb,EACA,CACI,GAAM,IACN,IAAO,qDACP,MAAS,0BACb,EACA,CACI,GAAM,IACN,IAAO,2DACP,MAAS,wBACb,EACH,CACD,IAAI,CAAC,cAAc,CAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAE,CACrC,IAAI,CAAC,iBAAiB,CACtB,IAAI,CAAC,iBAAiB,AAC1B,CAEA,SAAU,CACN,IAAI,CAAC,aAAa,EACtB,CAGA,eAAgB,CACZ,IAAM,EAAY,SAAS,aAAa,CAAC,OACnC,EAAW,SAAS,aAAa,CAAC,OAGxC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAW,GAC/B,EAAU,SAAS,CAAG,4BACtB,EAAS,SAAS,CAAG,qCAGrB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,EAAM,KAC7B,IAAM,EAAe,EAAK,GAAG,CAAG,SAAS,aAAa,CAAC,OAAS,KAC1D,EAAU,SAAS,aAAa,CAAC,OACjC,EAAY,EAAK,KAAK,CAAG,SAAS,aAAa,CAAC,MAAQ,KAC9D,EAAa,MAAM,CAAC,EAAS,GAC7B,EAAU,MAAM,CAAC,GAIjB,EAAU,SAAS,CAAG,CAAC,qCAAqC,EAAE,EAAQ,EAAE,CAAC,CACzE,EAAU,WAAW,CAAG,EAAK,KAAK,CAClC,EAAU,YAAY,CAAC,UAAW,QAElC,EAAQ,SAAS,CAAG,CAAC,gCAAgC,EAAE,EAAQ,EAAE,CAAC,CAClE,EAAQ,GAAG,CAAG,EAAK,GAAG,CAEtB,EAAa,SAAS,CAAG,CAAC,0CAA0C,EAAE,EAAQ,EAAE,CAAC,CAIjF,EAAa,YAAY,CAAC,UAAW,QAErC,EAAa,YAAY,CAAC,aAAc,CAAC,EAAE,EAAQ,EAAE,CAAC,EACtD,EAAU,YAAY,CAAC,aAAc,CAAC,EAAE,EAAQ,EAAE,CAAC,CACvD,GAEA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,AAAC,IAC1B,IAAM,EAAM,SAAS,aAAa,CAAC,UAC7B,EAAS,SAAS,aAAa,CAAC,OAGtC,CAAA,EAAO,SAAS,CAAG,EACnB,EAAO,SAAS,CAAG,YACnB,EAAI,MAAM,CAAC,GAGX,EAAI,SAAS,CAAG,CAAC,gDAAgD,EAAE,EAAO,CAAC,CAC3E,EAAI,YAAY,CAAC,YAAa,GAG9B,EAAS,MAAM,CAAC,EACpB,GAGA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAS,QAAQ,CAAC,EAGvC,IAAI,CAAC,iBAAiB,CAAG,EACzB,EAAU,MAAM,CAAC,EACrB,CAEA,YAAY,CAAQ,CAAE,CAClB,EAAS,OAAO,CAAC,AAAA,IACb,EAAQ,OAAO,CAAG,AAAC,IACf,EAAM,cAAc,GAGpB,IAAI,CAAC,cAAc,CAAC,EAAQ,OAAO,CAAC,IAAI,CAC5C,CACJ,EACJ,CAEA,eAAe,CAAO,CAAE,OACpB,AAAI,AAAY,aAAZ,EAA+B,IAAI,CAAC,QAAQ,GAC5C,AAAY,SAAZ,EAA2B,IAAI,CAAC,IAAI,SAE5C,CAEA,UAAW,CAEP,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,IAG/C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,IAGlD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,EAAM,KAC/B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAM,CAAC,SAAS,CAAG,CAAC,0CAA0C,EAAE,EAAK,CAAC,AAC1G,EAMJ,CAEA,MAAO,CAEH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAG9C,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAGnD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,EAAM,KAC/B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAM,CAAC,SAAS,CAAG,CAAC,0CAA0C,EAAE,EAAK,CAAC,AAC1G,EAMJ,CAEA,KAAM,CACF,IAAM,EAAU,CACZ,GAAM,GACN,IAAO,EACX,EACM,EAAW,IAAI,CAAC,YAAY,CAAC,MAAM,CACnC,EAAY,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,AAAA,GAAQ,EAAK,EAAE,EAAI,GAGjE,OAAO,MAAM,CAAC,EAAS,CACnB,GAAI,CAAC,EAAE,EAAW,EAAE,CAAC,CACrB,IAAK,CAAC,4BAA4B,EAAE,EAAW,EAAE,CAAC,AACtD,GAGA,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAY,EAAG,EAAG,GAG3C,IAAI,CAAC,IAAI,EACb,CAEA,MAAO,CACH,IAAM,EAAU,SAAS,aAAa,CAAC,iCAGnC,EAAQ,SAAS,CAAC,QAAQ,CAAC,YAE3B,EAAQ,SAAS,CAAC,MAAM,CAAC,WAGzB,cAAc,IAAI,CAAC,iBAAiB,EACpC,IAAI,CAAC,iBAAiB,CAAG,OAGzB,EAAQ,SAAS,CAAC,GAAG,CAAC,WAGtB,IAAI,CAAC,IAAI,GAGT,IAAI,CAAC,iBAAiB,CAAG,YAjBR,IAAM,IAAI,CAAC,IAAI,GAiBmB,MAE3D,CAEJ,EAKqC,GAErB,OAAO,GC9MvB,IAAI,EAAQ,EACR,EAAa,EACb,EAAc,GACd,EAAkB,EAAE,CAGxB,MAAM,EAAgB,SAAS,cAAc,CAAC,cACxC,EAAa,SAAS,aAAa,CAAC,eACpC,EAAY,SAAS,aAAa,CAAC,cACnC,EAAgB,SAAS,aAAa,CAAC,kBACvC,EAAgB,SAAS,aAAa,CAAC,kBACvC,EAAe,SAAS,aAAa,CAAC,wBACtC,EAAc,SAAS,aAAa,CAAC,gBACrC,EAAU,SAAS,aAAa,CAAC,YAEjC,EAAN,mCAEA,IAAI,EAAgB,CAAC,2EAA2E,EAAE,EAAO,CAAC,CAEtG,EAAmB,CAAC,gEAAgE,EAAE,EAAO,CAAC,CAkElG,eAAe,EAAa,CAAS,CAAE,CAAY,EAC/C,GAAI,KAyIqB,EAxIrB,IAAM,EAAY,MAAM,MAAM,GACxB,EAAY,MAAM,MAAM,GACxB,EAAY,MAAM,EAAU,IAAI,GAChC,EAAY,MAAM,EAAU,IAAI,GAChC,EAAe,EAAU,aAAa,CAAC,EAAE,CACzC,EAAoB,EAAU,aAAa,CAAC,EAAE,CACpD,EAAkB,EAAa,OAAO,CACd,EAAkB,OAAO,CACjD,QAAQ,GAAG,CAAC,wBACZ,QAAQ,GAAG,CAAC,GACZ,QAAQ,GAAG,CAAC,GACZ,EAAiB,EAAa,OAAO,EA6HhB,EA5HD,EAAkB,OAAO,CA6HjD,QAAQ,GAAG,CAAC,wBACZ,QAAQ,GAAG,CAAC,GA7HR,EAAQ,KAAK,CAAC,OAAO,CAAG,MAC5B,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,EAClB,CACJ,CAEA,SAAS,EAAiB,CAAO,EAC7B,IAAM,EAAsB,SAAS,aAAa,CAAC,wBAanD,GAZA,EAAc,WAAW,CAAG,EACxB,EAAQ,MAAM,CAAG,IAAO,EACxB,EAAc,WAAW,CAAI,EAAQ,MAAM,CAAG,GAE9C,EAAc,WAAW,CAAG,KAAK,KAAK,CAAC,EAAQ,MAAM,CAAG,IAAM,EAG9D,SAAS,aAAa,CAAC,0BACvB,QAAQ,GAAG,CAAC,4CACZ,EAAoB,WAAW,CAAC,SAAS,aAAa,CAAC,0BAGvD,CAAC,SAAS,aAAa,CAAC,wBAAyB,CACjD,QAAQ,GAAG,CAAC,8DACZ,IAAM,EAAsB,SAAS,aAAa,CAAC,MACnD,CAAA,EAAoB,EAAE,CAAG,sBACzB,EAAoB,WAAW,CAAC,EACpC,CACA,IAAM,EAAkB,EAAQ,KAAK,CAAC,EAAY,GAClD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAgB,MAAM,CAAE,IAAK,CAE7C,IAAI,EAAa,CAAe,CAAC,EAAE,CAE7B,EAAa,SAAS,aAAa,CAAC,MAC1C,CAAA,EAAW,SAAS,CAAG,OACvB,EAAW,EAAE,CAAG,aAGhB,IAAM,EAAkB,SAAS,aAAa,CAAC,MAC/C,CAAA,EAAgB,SAAS,CAAG,mBAG5B,IAAM,EAAY,SAAS,aAAa,CAAC,MACzC,CAAA,EAAU,GAAG,CAAG,CAAC,EAAE,EAAW,KAAK,CAAC,CAAC,CACrC,EAAU,SAAS,CAAG,eACtB,EAAU,EAAE,CAAG,YACf,EAAU,GAAG,CAAG,iBAGhB,IAAM,EAAM,SAAS,aAAa,CAAC,OACnC,CAAA,EAAI,WAAW,CAAG,SAClB,EAAI,SAAS,CAAG,MAGhB,IAAM,EAAuB,SAAS,aAAa,CAAC,MACpD,CAAA,EAAqB,EAAE,CAAG,uBAG1B,IAAM,EAAa,SAAS,aAAa,CAAC,OAC1C,CAAA,EAAW,EAAE,CAAG,aAEhB,IAAM,EAAgB,AADF,IAAI,OACU,kBAAkB,CAAC,QAAS,CAC1D,IAAK,UACL,MAAO,OACP,KAAM,SACV,EACA,CAAA,EAAW,WAAW,CAAG,EAGzB,IAAM,EAAyB,SAAS,aAAa,CAAC,MACtD,CAAA,EAAuB,EAAE,CAAG,yBAG5B,IAAM,EAAa,SAAS,aAAa,CAAC,SAC1C,CAAA,EAAW,EAAE,CAAG,aAGhB,IAAM,EAAY,SAAS,aAAa,CAAC,IACzC,CAAA,EAAU,SAAS,CAAG,mBAGtB,IAAM,EAAc,SAAS,aAAa,CAAC,SAC3C,CAAA,EAAY,EAAE,CAAG,cAGjB,IAAM,EAAY,SAAS,aAAa,CAAC,IACzC,CAAA,EAAU,SAAS,CAAG,cAGtB,IAAM,EAAW,SAAS,aAAa,CAAC,MACxC,CAAA,EAAS,SAAS,CAAG,YAGrB,IAAM,EAAY,SAAS,aAAa,CAAC,KACzC,CAAA,EAAU,SAAS,CAAG,aACtB,EAAU,WAAW,CAAG,CAAC,EAAE,EAAW,IAAI,CAAC,CAAC,CAG5C,IAAM,EAAW,SAAS,aAAa,CAAC,IACxC,CAAA,EAAS,SAAS,CAAG,YACrB,IAAI,EAAgB,EAAW,OAAO,AACtC,CAAA,EAAS,WAAW,CAAG,CAAC,EAAE,EAAc,KAAK,CAAC,EAAG,KAAO,MAAM,CAAC,CAG/D,IAAM,EAAW,SAAS,aAAa,CAAC,IACxC,CAAA,EAAS,WAAW,CAAG,YACvB,EAAS,IAAI,CAAG,CAAC,EAAE,EAAW,IAAI,CAAC,CAAC,CAGpC,oBAAoB,WAAW,CAAC,GAChC,EAAW,MAAM,CAAC,EAAiB,EAAsB,GAEzD,EAAgB,MAAM,CAAC,EAAW,GAElC,EAAqB,MAAM,CAAC,EAAY,GACxC,EAAuB,MAAM,CAAC,EAAY,GAE1C,EAAW,WAAW,CAAC,GACvB,EAAY,WAAW,CAAC,GAExB,EAAS,MAAM,CAAC,EAAW,EAAU,EACzC,CACA,EAAQ,KAAK,CAAC,OAAO,CAAG,MAC5B,CAxMA,EAAc,gBAAgB,CAAC,SAAU,KACrC,EAAQ,KAAK,CAAC,OAAO,CAAG,QACxB,EAAQ,EACR,EAAa,EACb,EAAc,GACd,EAAU,KAAK,CAAC,KAAK,CAAG,UACxB,EAAW,KAAK,CAAC,KAAK,CAAG,UAEzB,IAAM,EAAe,AADE,EAAc,OAAO,CAAC,EAAc,aAAa,CAAC,CACrC,WAAW,CAC/C,EAAgB,CAAC,0DAA0D,EAAE,EAAa,kBAAkB,EAAE,EAAO,CAAC,CACtH,EAAmB,CAAC,6DAA6D,EAAE,EAAa,kBAAkB,EAAE,EAAO,CAAC,CAC5H,QAAQ,GAAG,CAAC,GACZ,QAAQ,GAAG,CAAC,GACZ,EAAa,EAAe,EAChC,GAEA,SAAS,gBAAgB,CAAC,mBAAoB,KAC1C,EAAQ,KAAK,CAAC,OAAO,CAAG,QACxB,EAAa,EAAe,EAChC,GAEA,EAAU,gBAAgB,CAAC,QAAS,KAChC,GAAI,EAAa,GAAK,GAAe,GACjC,EAAW,KAAK,CAAC,KAAK,CAAG,UACzB,GAAc,GACd,GAAe,GACf,IACA,EAAQ,KAAK,CAAC,OAAO,CAAG,QACxB,EAAiB,OACd,CACH,EAAU,KAAK,CAAC,KAAK,CAAG,UACxB,QAAQ,GAAG,CAAC,uBACZ,MACJ,CACJ,GAEA,EAAW,gBAAgB,CAAC,QAAS,KACjC,GAAI,EAAc,EAAgB,MAAM,CACpC,EAAU,KAAK,CAAC,KAAK,CAAG,UACxB,GAAc,GACd,GAAe,GACf,IACA,EAAQ,KAAK,CAAC,OAAO,CAAG,QACxB,EAAiB,OACd,CACH,EAAW,KAAK,CAAC,KAAK,CAAG,UACzB,QAAQ,GAAG,CAAC,iCACZ,MACJ,CACJ,GAEA,EAAa,gBAAgB,CAAC,QAAS,KACnC,EAAQ,KAAK,CAAC,OAAO,CAAG,QACxB,EAAQ,EACR,EAAa,EACb,EAAc,GACd,EAAU,KAAK,CAAC,KAAK,CAAG,UACxB,EAAW,KAAK,CAAC,KAAK,CAAG,UACzB,IAAI,EAAa,EAAY,KAAK,CAElC,QAAQ,GAAG,CADX,EAAgB,CAAC,8CAA8C,EAAE,EAAW,kBAAkB,EAAE,EAAO,CAAC,EAExG,EAAa,EAAe,EAChC","sources":["<anon>","js/app.js","js/carousel.js","js/recipes.js"],"sourcesContent":["class $570df71cc35140d7$var$Carousel {\n    constructor(element){\n        this.element = element;\n        this.carouselOptions = [\n            \"previous\",\n            \"next\"\n        ];\n        this.carouselData = [\n            {\n                \"id\": \"1\",\n                \"src\": \"https://randommer.io/images/foods/Caprese%20Salad.webp\",\n                \"title\": \"Italiano Strawberry Smoothies Pancake\"\n            },\n            {\n                \"id\": \"2\",\n                \"src\": \"https://randommer.io/images/foods/Huevos%20Rancheros.webp\",\n                \"title\": \"Steak Beef With Padang Sauce\"\n            },\n            {\n                \"id\": \"3\",\n                \"src\": \"https://randommer.io/images/foods/Chicken%20Tenders.webp\",\n                \"title\": \"Jollibee With Tinola Sauce\"\n            },\n            {\n                \"id\": \"4\",\n                \"src\": \"https://randommer.io/images/foods/Bento%20Box.webp\",\n                \"title\": \"Inasal With Tinola Sauce\"\n            },\n            {\n                \"id\": \"5\",\n                \"src\": \"https://randommer.io/images/foods/Veggie%20Sandwich.webp\",\n                \"title\": \"McDo With Tinola Sauce\"\n            }\n        ];\n        this.carouselInView = [\n            1,\n            2,\n            3,\n            4,\n            5\n        ];\n        this.carouselContainer;\n        this.carouselPlayState;\n    }\n    mounted() {\n        this.setupCarousel();\n    }\n    // Build carousel html\n    setupCarousel() {\n        const container = document.createElement(\"div\");\n        const controls = document.createElement(\"div\");\n        // Add container for carousel items and controls\n        this.element.append(container, controls);\n        container.className = \"carousel-custom-container\";\n        controls.className = \"carousel-custom-controls container\";\n        // Take dataset array and append items to container\n        this.carouselData.forEach((item, index)=>{\n            const carouselItem = item.src ? document.createElement(\"div\") : null;\n            const imgItem = document.createElement(\"img\");\n            const foodTitle = item.title ? document.createElement(\"h4\") : null;\n            carouselItem.append(imgItem, foodTitle);\n            container.append(carouselItem);\n            // Add item attributes\n            // imgDiv.className = `imgDiv`;\n            foodTitle.className = `foodTitle-item foodTitle-custom-item-${index + 1}`;\n            foodTitle.textContent = item.title;\n            foodTitle.setAttribute(\"loading\", \"lazy\");\n            imgItem.className = `imageItem imageItem-custom-item-${index + 1}`;\n            imgItem.src = item.src;\n            carouselItem.className = `carousel-custom-item carousel-custom-item-${index + 1}`;\n            // carouselItem.style.backgroundImage = `url(${item.src})`;\n            // carouselItem.style.backgroundSize = 'cover';\n            // carouselItem.style.backgroundPosition = 'center';\n            carouselItem.setAttribute(\"loading\", \"lazy\");\n            // Used to keep track of carousel items, infinite items possible in carousel however min 5 items required\n            carouselItem.setAttribute(\"data-index\", `${index + 1}`);\n            foodTitle.setAttribute(\"data-index\", `${index + 1}`);\n        });\n        this.carouselOptions.forEach((option)=>{\n            const btn = document.createElement(\"button\");\n            const axSpan = document.createElement(\"span\");\n            // Add accessibilty spans to button\n            axSpan.innerText = option;\n            axSpan.className = \"ax-hidden\";\n            btn.append(axSpan);\n            // Add button attributes\n            btn.className = `carousel-custom-control carousel-custom-control-${option}`;\n            btn.setAttribute(\"data-name\", option);\n            // Add carousel control options\n            controls.append(btn);\n        });\n        // After rendering carousel to our DOM, setup carousel controls' event listeners\n        this.setControls([\n            ...controls.children\n        ]);\n        // Set container property\n        this.carouselContainer = container;\n        container.append(controls);\n    }\n    setControls(controls) {\n        controls.forEach((control)=>{\n            control.onclick = (event)=>{\n                event.preventDefault();\n                // Manage control actions, update our carousel data first then with a callback update our DOM\n                this.controlManager(control.dataset.name);\n            };\n        });\n    }\n    controlManager(control) {\n        if (control === \"previous\") return this.previous();\n        if (control === \"next\") return this.next();\n        return;\n    }\n    previous() {\n        // Update order of items in data array to be shown in carousel\n        this.carouselData.unshift(this.carouselData.pop());\n        // Push the first item to the end of the array so that the previous item is front and center\n        this.carouselInView.push(this.carouselInView.shift());\n        // Update the css class for each carousel item in view\n        this.carouselInView.forEach((item, index)=>{\n            this.carouselContainer.children[index].className = `carousel-custom-item carousel-custom-item-${item}`;\n        });\n    // // Using the first 5 items in data array update content of carousel items in view\n    // this.carouselData.slice(0, 5).forEach((data, index) => {\n    //     document.querySelector(`.carousel-custom-item-${index + 1}`).src = data.src;\n    // });\n    }\n    next() {\n        // Update order of items in data array to be shown in carousel\n        this.carouselData.push(this.carouselData.shift());\n        // Take the last item and add it to the beginning of the array so that the next item is front and center\n        this.carouselInView.unshift(this.carouselInView.pop());\n        // Update the css class for each carousel item in view\n        this.carouselInView.forEach((item, index)=>{\n            this.carouselContainer.children[index].className = `carousel-custom-item carousel-custom-item-${item}`;\n        });\n    // Using the first 5 items in data array update content of carousel items in view\n    // this.carouselData.slice(0, 5).forEach((data, index) => {\n    //     document.querySelector(`.carousel-custom-item-${index + 1}`).style.backgroundImage = `url(${data.src})`;\n    // });\n    }\n    add() {\n        const newItem = {\n            \"id\": \"\",\n            \"src\": \"\"\n        };\n        const lastItem = this.carouselData.length;\n        const lastIndex = this.carouselData.findIndex((item)=>item.id == lastItem);\n        // Assign properties for new carousel item\n        Object.assign(newItem, {\n            id: `${lastItem + 1}`,\n            src: `http://fakeimg.pl/300/?text=${lastItem + 1}`\n        });\n        // Then add it to the \"last\" item in our carouselData\n        this.carouselData.splice(lastIndex + 1, 0, newItem);\n        // Shift carousel to display new item\n        this.next();\n    }\n    play() {\n        const playBtn = document.querySelector(\".carousel-custom-control-play\");\n        const startPlaying = ()=>this.next();\n        if (playBtn.classList.contains(\"playing\")) {\n            // Remove class to return to play button state/appearance\n            playBtn.classList.remove(\"playing\");\n            // Remove setInterval\n            clearInterval(this.carouselPlayState);\n            this.carouselPlayState = null;\n        } else {\n            // Add class to change to pause button state/appearance\n            playBtn.classList.add(\"playing\");\n            // First run initial next method\n            this.next();\n            // Use play state prop to store interval ID and run next method on a 1.5 second interval\n            this.carouselPlayState = setInterval(startPlaying, 1500);\n        }\n    }\n}\n// Refers to the carousel root element you want to target, use specific class selectors if using multiple carousels\nconst $570df71cc35140d7$var$element = document.querySelector(\".carousel-custom\");\n// Create a new carousel object\nconst $570df71cc35140d7$var$exampleCarousel = new $570df71cc35140d7$var$Carousel($570df71cc35140d7$var$element);\n// Setup carousel and methods\n$570df71cc35140d7$var$exampleCarousel.mounted();\n\n\nlet $5aa377cfc6a85567$var$count = 1;\nlet $5aa377cfc6a85567$var$startIndex = 0;\nlet $5aa377cfc6a85567$var$deleteCount = 10;\nlet $5aa377cfc6a85567$var$recipeArrayList = [];\nlet $5aa377cfc6a85567$var$latestRecipeArrayList = [];\nconst $5aa377cfc6a85567$var$selectElement = document.getElementById(\"categories\");\nconst $5aa377cfc6a85567$var$arrowRight = document.querySelector(\"#arrowRight\");\nconst $5aa377cfc6a85567$var$arrowLeft = document.querySelector(\"#arrowLeft\");\nconst $5aa377cfc6a85567$var$startingIndex = document.querySelector(\"#startingIndex\");\nconst $5aa377cfc6a85567$var$endPageNumber = document.querySelector(\"#endPageNumber\");\nconst $5aa377cfc6a85567$var$searchButton = document.querySelector(\".btn-outline-success\");\nconst $5aa377cfc6a85567$var$searchInput = document.querySelector(\"#searchInput\");\nconst $5aa377cfc6a85567$var$spinner = document.querySelector(\"#spinner\");\n//api key\nconst $5aa377cfc6a85567$var$apiKey = \"7cda474b20f147df88911df91cc05de4\";\n// top recipes\nlet $5aa377cfc6a85567$var$topRecipesUrl = `https://api.spoonacular.com/food/search?query=top+recipes&number=40&apiKey=${$5aa377cfc6a85567$var$apiKey}`;\n// latest recipes\nlet $5aa377cfc6a85567$var$latestRecipesUrl = `https://api.spoonacular.com/food/search?query=&number=40&apiKey=${$5aa377cfc6a85567$var$apiKey}`;\n$5aa377cfc6a85567$var$selectElement.addEventListener(\"change\", ()=>{\n    $5aa377cfc6a85567$var$spinner.style.display = \"block\";\n    $5aa377cfc6a85567$var$count = 1;\n    $5aa377cfc6a85567$var$startIndex = 0;\n    $5aa377cfc6a85567$var$deleteCount = 10;\n    $5aa377cfc6a85567$var$arrowLeft.style.color = \"#CCCCCC\";\n    $5aa377cfc6a85567$var$arrowRight.style.color = \"#F1632D\";\n    const selectedOption = $5aa377cfc6a85567$var$selectElement.options[$5aa377cfc6a85567$var$selectElement.selectedIndex];\n    const selectedText = selectedOption.textContent;\n    $5aa377cfc6a85567$var$topRecipesUrl = `https://api.spoonacular.com/food/search?query=top+recipes+${selectedText}&number=40&apiKey=${$5aa377cfc6a85567$var$apiKey}`;\n    $5aa377cfc6a85567$var$latestRecipesUrl = `https://api.spoonacular.com/food/search?query=latest+recipes+${selectedText}&number=40&apiKey=${$5aa377cfc6a85567$var$apiKey}`;\n    console.log($5aa377cfc6a85567$var$topRecipesUrl);\n    console.log($5aa377cfc6a85567$var$latestRecipesUrl);\n    $5aa377cfc6a85567$var$fetchRecipes($5aa377cfc6a85567$var$topRecipesUrl, $5aa377cfc6a85567$var$latestRecipesUrl);\n});\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    $5aa377cfc6a85567$var$spinner.style.display = \"block\";\n    $5aa377cfc6a85567$var$fetchRecipes($5aa377cfc6a85567$var$topRecipesUrl, $5aa377cfc6a85567$var$latestRecipesUrl);\n});\n$5aa377cfc6a85567$var$arrowLeft.addEventListener(\"click\", ()=>{\n    if ($5aa377cfc6a85567$var$startIndex > 0 && $5aa377cfc6a85567$var$deleteCount >= 10) {\n        $5aa377cfc6a85567$var$arrowRight.style.color = \"#F1632D\";\n        $5aa377cfc6a85567$var$startIndex -= 10;\n        $5aa377cfc6a85567$var$deleteCount -= 10;\n        $5aa377cfc6a85567$var$count--;\n        $5aa377cfc6a85567$var$spinner.style.display = \"block\";\n        $5aa377cfc6a85567$var$displayTopRecipe($5aa377cfc6a85567$var$recipeArrayList);\n    } else {\n        $5aa377cfc6a85567$var$arrowLeft.style.color = \"#CCCCCC\";\n        console.log(\"Cannot reduce more.\");\n        return;\n    }\n});\n$5aa377cfc6a85567$var$arrowRight.addEventListener(\"click\", ()=>{\n    if ($5aa377cfc6a85567$var$deleteCount < $5aa377cfc6a85567$var$recipeArrayList.length) {\n        $5aa377cfc6a85567$var$arrowLeft.style.color = \"#F1632D\";\n        $5aa377cfc6a85567$var$startIndex += 10;\n        $5aa377cfc6a85567$var$deleteCount += 10;\n        $5aa377cfc6a85567$var$count++;\n        $5aa377cfc6a85567$var$spinner.style.display = \"block\";\n        $5aa377cfc6a85567$var$displayTopRecipe($5aa377cfc6a85567$var$recipeArrayList);\n    } else {\n        $5aa377cfc6a85567$var$arrowRight.style.color = \"#CCCCCC\";\n        console.log(\"Reached maximum delete count.\");\n        return;\n    }\n});\n$5aa377cfc6a85567$var$searchButton.addEventListener(\"click\", ()=>{\n    $5aa377cfc6a85567$var$spinner.style.display = \"block\";\n    $5aa377cfc6a85567$var$count = 1;\n    $5aa377cfc6a85567$var$startIndex = 0;\n    $5aa377cfc6a85567$var$deleteCount = 10;\n    $5aa377cfc6a85567$var$arrowLeft.style.color = \"#CCCCCC\";\n    $5aa377cfc6a85567$var$arrowRight.style.color = \"#F1632D\";\n    let inputValue = $5aa377cfc6a85567$var$searchInput.value;\n    $5aa377cfc6a85567$var$topRecipesUrl = `https://api.spoonacular.com/food/search?query=${inputValue}&number=40&apiKey=${$5aa377cfc6a85567$var$apiKey}`;\n    console.log($5aa377cfc6a85567$var$topRecipesUrl);\n    $5aa377cfc6a85567$var$fetchRecipes($5aa377cfc6a85567$var$topRecipesUrl, $5aa377cfc6a85567$var$latestRecipesUrl);\n});\nasync function $5aa377cfc6a85567$var$fetchRecipes(topRecipe, latestRecipe) {\n    try {\n        const response1 = await fetch(topRecipe);\n        const response2 = await fetch(latestRecipe);\n        const jsonData1 = await response1.json();\n        const jsonData2 = await response2.json();\n        const tRecipesList = jsonData1.searchResults[0];\n        const latestRecipesList = jsonData2.searchResults[0];\n        $5aa377cfc6a85567$var$recipeArrayList = tRecipesList.results;\n        $5aa377cfc6a85567$var$latestRecipeArrayList = latestRecipesList.results;\n        console.log(\"I wish its not empty\");\n        console.log(latestRecipe);\n        console.log(jsonData2);\n        $5aa377cfc6a85567$var$displayTopRecipe(tRecipesList.results);\n        $5aa377cfc6a85567$var$displayLatestRecipe(latestRecipesList.results);\n        $5aa377cfc6a85567$var$spinner.style.display = \"none\";\n    } catch (error) {\n        console.error(error);\n    }\n}\nfunction $5aa377cfc6a85567$var$displayTopRecipe(recipes) {\n    const topRecipesContainer = document.querySelector(\"#topRecipesContainer\");\n    $5aa377cfc6a85567$var$startingIndex.textContent = $5aa377cfc6a85567$var$count;\n    if (recipes.length % 10 === 0) $5aa377cfc6a85567$var$endPageNumber.textContent = recipes.length / 10;\n    else $5aa377cfc6a85567$var$endPageNumber.textContent = Math.floor(recipes.length / 10) + $5aa377cfc6a85567$var$count;\n    if (document.querySelector(\"#recipeCardContainer\")) {\n        console.log(\"Recipe Card Container found! Deleting...\");\n        topRecipesContainer.removeChild(document.querySelector(\"#recipeCardContainer\"));\n    }\n    if (!document.querySelector(\"#recipeCardContainer\")) {\n        console.log(\"Recipe Card Container not found. Creating new container...\");\n        const recipeCardContainer1 = document.createElement(\"div\");\n        recipeCardContainer1.id = \"recipeCardContainer\";\n        topRecipesContainer.appendChild(recipeCardContainer1);\n    }\n    const topRecipesArray = recipes.slice($5aa377cfc6a85567$var$startIndex, $5aa377cfc6a85567$var$deleteCount);\n    for(let i = 0; i < topRecipesArray.length; i++){\n        // collecting recipes to an array\n        let topRecipes = topRecipesArray[i];\n        // recipe card div\n        const recipeCard = document.createElement(\"div\");\n        recipeCard.className = \"card\";\n        recipeCard.id = \"recipeCard\";\n        // recipe container div\n        const recipeContainer = document.createElement(\"div\");\n        recipeContainer.className = \"recipe-container\";\n        // recipe image\n        const recipeImg = document.createElement(\"img\");\n        recipeImg.src = `${topRecipes.image}`;\n        recipeImg.className = \"card-img-top\";\n        recipeImg.id = \"recipeImg\";\n        recipeImg.alt = \"Recipe Picture\";\n        // tag span\n        const tag = document.createElement(\"span\");\n        tag.textContent = \"DISHES\";\n        tag.className = \"tag\";\n        // date actions container\n        const dateActionsContainer = document.createElement(\"div\");\n        dateActionsContainer.id = \"dateActionsContainer\";\n        // recipe date span\n        const recipeDate = document.createElement(\"span\");\n        recipeDate.id = \"recipeDate\";\n        const currentDate = new Date();\n        const formattedDate = currentDate.toLocaleDateString(\"en-GB\", {\n            day: \"numeric\",\n            month: \"long\",\n            year: \"numeric\"\n        });\n        recipeDate.textContent = formattedDate;\n        // action buttons container\n        const actionButtonsContainer = document.createElement(\"div\");\n        actionButtonsContainer.id = \"actionButtonsContainer\";\n        // chat button\n        const chatButton = document.createElement(\"button\");\n        chatButton.id = \"chatButton\";\n        // chat icon\n        const chatRight = document.createElement(\"i\");\n        chatRight.className = \"bi bi-chat-right\";\n        // share button\n        const shareButton = document.createElement(\"button\");\n        shareButton.id = \"shareButton\";\n        // share icon\n        const shareIcon = document.createElement(\"i\");\n        shareIcon.className = \"bi bi-share\";\n        // card body\n        const cardBody = document.createElement(\"div\");\n        cardBody.className = \"card-body\";\n        // card-title\n        const cardTitle = document.createElement(\"h5\");\n        cardTitle.className = \"card-title\";\n        cardTitle.textContent = `${topRecipes.name}`;\n        // card-text\n        const cardText = document.createElement(\"p\");\n        cardText.className = \"card-text\";\n        let recipeContent = topRecipes.content;\n        cardText.textContent = `${recipeContent.slice(0, 136) + \"...\"}`;\n        // read more\n        const readMore = document.createElement(\"a\");\n        readMore.textContent = \"Read More\";\n        readMore.href = `${topRecipes.link}`;\n        //Appending Children\n        recipeCardContainer.appendChild(recipeCard);\n        recipeCard.append(recipeContainer, dateActionsContainer, cardBody);\n        recipeContainer.append(recipeImg, tag);\n        dateActionsContainer.append(recipeDate, actionButtonsContainer);\n        actionButtonsContainer.append(chatButton, shareButton);\n        chatButton.appendChild(chatRight);\n        shareButton.appendChild(shareIcon);\n        cardBody.append(cardTitle, cardText, readMore);\n    }\n    $5aa377cfc6a85567$var$spinner.style.display = \"none\";\n}\nfunction $5aa377cfc6a85567$var$displayLatestRecipe(recipes) {\n    console.log(\"I guess empty again?\");\n    console.log(recipes);\n}\n\n\n\n\n//# sourceMappingURL=index.7945b662.js.map\n","import './carousel'\r\nimport './recipes'\r\n","class Carousel {\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.carouselOptions = ['previous', 'next'];\r\n        this.carouselData = [\r\n            {\r\n                'id': '1',\r\n                'src': 'https://randommer.io/images/foods/Caprese%20Salad.webp',\r\n                'title': 'Italiano Strawberry Smoothies Pancake',\r\n            },\r\n            {\r\n                'id': '2',\r\n                'src': 'https://randommer.io/images/foods/Huevos%20Rancheros.webp',\r\n                'title': 'Steak Beef With Padang Sauce',\r\n            },\r\n            {\r\n                'id': '3',\r\n                'src': 'https://randommer.io/images/foods/Chicken%20Tenders.webp',\r\n                'title': 'Jollibee With Tinola Sauce',\r\n            },\r\n            {\r\n                'id': '4',\r\n                'src': 'https://randommer.io/images/foods/Bento%20Box.webp',\r\n                'title': 'Inasal With Tinola Sauce',\r\n            },\r\n            {\r\n                'id': '5',\r\n                'src': 'https://randommer.io/images/foods/Veggie%20Sandwich.webp',\r\n                'title': 'McDo With Tinola Sauce',\r\n            }\r\n        ];\r\n        this.carouselInView = [1, 2, 3, 4, 5];\r\n        this.carouselContainer;\r\n        this.carouselPlayState;\r\n    }\r\n\r\n    mounted() {\r\n        this.setupCarousel();\r\n    }\r\n\r\n    // Build carousel html\r\n    setupCarousel() {\r\n        const container = document.createElement('div');\r\n        const controls = document.createElement('div');\r\n\r\n        // Add container for carousel items and controls\r\n        this.element.append(container, controls);\r\n        container.className = 'carousel-custom-container';\r\n        controls.className = 'carousel-custom-controls container';\r\n\r\n        // Take dataset array and append items to container\r\n        this.carouselData.forEach((item, index) => {\r\n            const carouselItem = item.src ? document.createElement('div') : null;\r\n            const imgItem = document.createElement('img');\r\n            const foodTitle = item.title ? document.createElement('h4') : null;\r\n            carouselItem.append(imgItem, foodTitle);\r\n            container.append(carouselItem);\r\n\r\n            // Add item attributes\r\n            // imgDiv.className = `imgDiv`;\r\n            foodTitle.className = `foodTitle-item foodTitle-custom-item-${index + 1}`\r\n            foodTitle.textContent = item.title;\r\n            foodTitle.setAttribute('loading', 'lazy');\r\n\r\n            imgItem.className = `imageItem imageItem-custom-item-${index + 1}`;\r\n            imgItem.src = item.src;\r\n\r\n            carouselItem.className = `carousel-custom-item carousel-custom-item-${index + 1}`;\r\n            // carouselItem.style.backgroundImage = `url(${item.src})`;\r\n            // carouselItem.style.backgroundSize = 'cover';\r\n            // carouselItem.style.backgroundPosition = 'center';\r\n            carouselItem.setAttribute('loading', 'lazy');\r\n            // Used to keep track of carousel items, infinite items possible in carousel however min 5 items required\r\n            carouselItem.setAttribute('data-index', `${index + 1}`);\r\n            foodTitle.setAttribute('data-index', `${index + 1}`);\r\n        });\r\n\r\n        this.carouselOptions.forEach((option) => {\r\n            const btn = document.createElement('button');\r\n            const axSpan = document.createElement('span');\r\n\r\n            // Add accessibilty spans to button\r\n            axSpan.innerText = option;\r\n            axSpan.className = 'ax-hidden';\r\n            btn.append(axSpan);\r\n\r\n            // Add button attributes\r\n            btn.className = `carousel-custom-control carousel-custom-control-${option}`;\r\n            btn.setAttribute('data-name', option);\r\n\r\n            // Add carousel control options\r\n            controls.append(btn);\r\n        });\r\n\r\n        // After rendering carousel to our DOM, setup carousel controls' event listeners\r\n        this.setControls([...controls.children]);\r\n\r\n        // Set container property\r\n        this.carouselContainer = container;\r\n        container.append(controls);\r\n    }\r\n\r\n    setControls(controls) {\r\n        controls.forEach(control => {\r\n            control.onclick = (event) => {\r\n                event.preventDefault();\r\n\r\n                // Manage control actions, update our carousel data first then with a callback update our DOM\r\n                this.controlManager(control.dataset.name);\r\n            };\r\n        });\r\n    }\r\n\r\n    controlManager(control) {\r\n        if (control === 'previous') return this.previous();\r\n        if (control === 'next') return this.next();\r\n        return;\r\n    }\r\n\r\n    previous() {\r\n        // Update order of items in data array to be shown in carousel\r\n        this.carouselData.unshift(this.carouselData.pop());\r\n\r\n        // Push the first item to the end of the array so that the previous item is front and center\r\n        this.carouselInView.push(this.carouselInView.shift());\r\n\r\n        // Update the css class for each carousel item in view\r\n        this.carouselInView.forEach((item, index) => {\r\n            this.carouselContainer.children[index].className = `carousel-custom-item carousel-custom-item-${item}`;\r\n        });\r\n\r\n        // // Using the first 5 items in data array update content of carousel items in view\r\n        // this.carouselData.slice(0, 5).forEach((data, index) => {\r\n        //     document.querySelector(`.carousel-custom-item-${index + 1}`).src = data.src;\r\n        // });\r\n    }\r\n\r\n    next() {\r\n        // Update order of items in data array to be shown in carousel\r\n        this.carouselData.push(this.carouselData.shift());\r\n\r\n        // Take the last item and add it to the beginning of the array so that the next item is front and center\r\n        this.carouselInView.unshift(this.carouselInView.pop());\r\n\r\n        // Update the css class for each carousel item in view\r\n        this.carouselInView.forEach((item, index) => {\r\n            this.carouselContainer.children[index].className = `carousel-custom-item carousel-custom-item-${item}`;\r\n        });\r\n\r\n        // Using the first 5 items in data array update content of carousel items in view\r\n        // this.carouselData.slice(0, 5).forEach((data, index) => {\r\n        //     document.querySelector(`.carousel-custom-item-${index + 1}`).style.backgroundImage = `url(${data.src})`;\r\n        // });\r\n    }\r\n\r\n    add() {\r\n        const newItem = {\r\n            'id': '',\r\n            'src': '',\r\n        };\r\n        const lastItem = this.carouselData.length;\r\n        const lastIndex = this.carouselData.findIndex(item => item.id == lastItem);\r\n\r\n        // Assign properties for new carousel item\r\n        Object.assign(newItem, {\r\n            id: `${lastItem + 1}`,\r\n            src: `http://fakeimg.pl/300/?text=${lastItem + 1}`\r\n        });\r\n\r\n        // Then add it to the \"last\" item in our carouselData\r\n        this.carouselData.splice(lastIndex + 1, 0, newItem);\r\n\r\n        // Shift carousel to display new item\r\n        this.next();\r\n    }\r\n\r\n    play() {\r\n        const playBtn = document.querySelector('.carousel-custom-control-play');\r\n        const startPlaying = () => this.next();\r\n\r\n        if (playBtn.classList.contains('playing')) {\r\n            // Remove class to return to play button state/appearance\r\n            playBtn.classList.remove('playing');\r\n\r\n            // Remove setInterval\r\n            clearInterval(this.carouselPlayState);\r\n            this.carouselPlayState = null;\r\n        } else {\r\n            // Add class to change to pause button state/appearance\r\n            playBtn.classList.add('playing');\r\n\r\n            // First run initial next method\r\n            this.next();\r\n\r\n            // Use play state prop to store interval ID and run next method on a 1.5 second interval\r\n            this.carouselPlayState = setInterval(startPlaying, 1500);\r\n        };\r\n    }\r\n\r\n}\r\n\r\n// Refers to the carousel root element you want to target, use specific class selectors if using multiple carousels\r\nconst element = document.querySelector('.carousel-custom');\r\n// Create a new carousel object\r\nconst exampleCarousel = new Carousel(element);\r\n// Setup carousel and methods\r\nexampleCarousel.mounted();\r\n","let count = 1;\r\nlet startIndex = 0;\r\nlet deleteCount = 10;\r\nlet recipeArrayList = [];\r\nlet latestRecipeArrayList = [];\r\n\r\nconst selectElement = document.getElementById('categories');\r\nconst arrowRight = document.querySelector('#arrowRight');\r\nconst arrowLeft = document.querySelector('#arrowLeft');\r\nconst startingIndex = document.querySelector('#startingIndex');\r\nconst endPageNumber = document.querySelector('#endPageNumber');\r\nconst searchButton = document.querySelector('.btn-outline-success');\r\nconst searchInput = document.querySelector('#searchInput');\r\nconst spinner = document.querySelector('#spinner');\r\n//api key\r\nconst apiKey = process.env.SPOONACULAR_API_KEY;\r\n// top recipes\r\nlet topRecipesUrl = `https://api.spoonacular.com/food/search?query=top+recipes&number=40&apiKey=${apiKey}`;\r\n// latest recipes\r\nlet latestRecipesUrl = `https://api.spoonacular.com/food/search?query=&number=40&apiKey=${apiKey}`;\r\n\r\nselectElement.addEventListener('change', () => {\r\n    spinner.style.display = 'block';\r\n    count = 1;\r\n    startIndex = 0;\r\n    deleteCount = 10;\r\n    arrowLeft.style.color = '#CCCCCC';\r\n    arrowRight.style.color = '#F1632D';\r\n    const selectedOption = selectElement.options[selectElement.selectedIndex];\r\n    const selectedText = selectedOption.textContent;\r\n    topRecipesUrl = `https://api.spoonacular.com/food/search?query=top+recipes+${selectedText}&number=40&apiKey=${apiKey}`;\r\n    latestRecipesUrl = `https://api.spoonacular.com/food/search?query=latest+recipes+${selectedText}&number=40&apiKey=${apiKey}`;\r\n    console.log(topRecipesUrl);\r\n    console.log(latestRecipesUrl);\r\n    fetchRecipes(topRecipesUrl, latestRecipesUrl);\r\n})\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    spinner.style.display = 'block';\r\n    fetchRecipes(topRecipesUrl, latestRecipesUrl);\r\n});\r\n\r\narrowLeft.addEventListener('click', () => {\r\n    if (startIndex > 0 && deleteCount >= 10) {\r\n        arrowRight.style.color = '#F1632D';\r\n        startIndex -= 10;\r\n        deleteCount -= 10;\r\n        count--;\r\n        spinner.style.display = 'block';\r\n        displayTopRecipe(recipeArrayList);\r\n    } else {\r\n        arrowLeft.style.color = '#CCCCCC';\r\n        console.log('Cannot reduce more.');\r\n        return;\r\n    }\r\n})\r\n\r\narrowRight.addEventListener('click', () => {\r\n    if (deleteCount < recipeArrayList.length) {\r\n        arrowLeft.style.color = '#F1632D';\r\n        startIndex += 10;\r\n        deleteCount += 10;\r\n        count++;\r\n        spinner.style.display = 'block';\r\n        displayTopRecipe(recipeArrayList);\r\n    } else {\r\n        arrowRight.style.color = '#CCCCCC';\r\n        console.log('Reached maximum delete count.');\r\n        return;\r\n    }\r\n})\r\n\r\nsearchButton.addEventListener('click', () => {\r\n    spinner.style.display = 'block';\r\n    count = 1;\r\n    startIndex = 0;\r\n    deleteCount = 10;\r\n    arrowLeft.style.color = '#CCCCCC';\r\n    arrowRight.style.color = '#F1632D';\r\n    let inputValue = searchInput.value;\r\n    topRecipesUrl = `https://api.spoonacular.com/food/search?query=${inputValue}&number=40&apiKey=${apiKey}`;\r\n    console.log(topRecipesUrl);\r\n    fetchRecipes(topRecipesUrl, latestRecipesUrl);\r\n})\r\n\r\nasync function fetchRecipes(topRecipe, latestRecipe) {\r\n    try {\r\n        const response1 = await fetch(topRecipe);\r\n        const response2 = await fetch(latestRecipe);\r\n        const jsonData1 = await response1.json();\r\n        const jsonData2 = await response2.json();\r\n        const tRecipesList = jsonData1.searchResults[0];\r\n        const latestRecipesList = jsonData2.searchResults[0];\r\n        recipeArrayList = tRecipesList.results;\r\n        latestRecipeArrayList = latestRecipesList.results;\r\n        console.log('I wish its not empty');\r\n        console.log(latestRecipe);\r\n        console.log(jsonData2);\r\n        displayTopRecipe(tRecipesList.results);\r\n        displayLatestRecipe(latestRecipesList.results);\r\n        spinner.style.display = 'none';\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nfunction displayTopRecipe(recipes) {\r\n    const topRecipesContainer = document.querySelector('#topRecipesContainer');\r\n    startingIndex.textContent = count;\r\n    if (recipes.length % 10 === 0) {\r\n        endPageNumber.textContent = (recipes.length / 10);\r\n    } else {\r\n        endPageNumber.textContent = Math.floor(recipes.length / 10) + count;\r\n    }\r\n\r\n    if (document.querySelector('#recipeCardContainer')) {\r\n        console.log('Recipe Card Container found! Deleting...');\r\n        topRecipesContainer.removeChild(document.querySelector('#recipeCardContainer'));\r\n    }\r\n\r\n    if (!document.querySelector('#recipeCardContainer')) {\r\n        console.log('Recipe Card Container not found. Creating new container...')\r\n        const recipeCardContainer = document.createElement('div');\r\n        recipeCardContainer.id = 'recipeCardContainer';\r\n        topRecipesContainer.appendChild(recipeCardContainer);\r\n    }\r\n    const topRecipesArray = recipes.slice(startIndex, deleteCount);\r\n    for (let i = 0; i < topRecipesArray.length; i++) {\r\n        // collecting recipes to an array\r\n        let topRecipes = topRecipesArray[i];\r\n        // recipe card div\r\n        const recipeCard = document.createElement('div');\r\n        recipeCard.className = 'card';\r\n        recipeCard.id = 'recipeCard';\r\n\r\n        // recipe container div\r\n        const recipeContainer = document.createElement('div');\r\n        recipeContainer.className = 'recipe-container';\r\n\r\n        // recipe image\r\n        const recipeImg = document.createElement('img');\r\n        recipeImg.src = `${topRecipes.image}`;\r\n        recipeImg.className = 'card-img-top';\r\n        recipeImg.id = 'recipeImg';\r\n        recipeImg.alt = 'Recipe Picture';\r\n\r\n        // tag span\r\n        const tag = document.createElement('span');\r\n        tag.textContent = 'DISHES';\r\n        tag.className = 'tag';\r\n\r\n        // date actions container\r\n        const dateActionsContainer = document.createElement('div');\r\n        dateActionsContainer.id = 'dateActionsContainer';\r\n\r\n        // recipe date span\r\n        const recipeDate = document.createElement('span');\r\n        recipeDate.id = 'recipeDate';\r\n        const currentDate = new Date();\r\n        const formattedDate = currentDate.toLocaleDateString('en-GB', {\r\n            day: 'numeric',\r\n            month: 'long',\r\n            year: 'numeric'\r\n        });\r\n        recipeDate.textContent = formattedDate;\r\n\r\n        // action buttons container\r\n        const actionButtonsContainer = document.createElement('div');\r\n        actionButtonsContainer.id = 'actionButtonsContainer';\r\n\r\n        // chat button\r\n        const chatButton = document.createElement('button');\r\n        chatButton.id = 'chatButton';\r\n\r\n        // chat icon\r\n        const chatRight = document.createElement('i');\r\n        chatRight.className = 'bi bi-chat-right';\r\n\r\n        // share button\r\n        const shareButton = document.createElement('button');\r\n        shareButton.id = 'shareButton';\r\n\r\n        // share icon\r\n        const shareIcon = document.createElement('i');\r\n        shareIcon.className = 'bi bi-share';\r\n\r\n        // card body\r\n        const cardBody = document.createElement('div');\r\n        cardBody.className = 'card-body';\r\n\r\n        // card-title\r\n        const cardTitle = document.createElement('h5');\r\n        cardTitle.className = 'card-title';\r\n        cardTitle.textContent = `${topRecipes.name}`;\r\n\r\n        // card-text\r\n        const cardText = document.createElement('p');\r\n        cardText.className = 'card-text';\r\n        let recipeContent = topRecipes.content;\r\n        cardText.textContent = `${recipeContent.slice(0, 136) + '...'}`\r\n\r\n        // read more\r\n        const readMore = document.createElement('a');\r\n        readMore.textContent = 'Read More';\r\n        readMore.href = `${topRecipes.link}`;\r\n\r\n        //Appending Children\r\n        recipeCardContainer.appendChild(recipeCard);\r\n        recipeCard.append(recipeContainer, dateActionsContainer, cardBody);\r\n\r\n        recipeContainer.append(recipeImg, tag);\r\n\r\n        dateActionsContainer.append(recipeDate, actionButtonsContainer);\r\n        actionButtonsContainer.append(chatButton, shareButton);\r\n\r\n        chatButton.appendChild(chatRight);\r\n        shareButton.appendChild(shareIcon);\r\n\r\n        cardBody.append(cardTitle, cardText, readMore);\r\n    }\r\n    spinner.style.display = 'none';\r\n}\r\n\r\nfunction displayLatestRecipe(recipes) {\r\n    console.log('I guess empty again?');\r\n    console.log(recipes);\r\n}\r\n"],"names":["$570df71cc35140d7$var$element","document","querySelector","$570df71cc35140d7$var$exampleCarousel","constructor","element","carouselOptions","carouselData","carouselInView","carouselContainer","carouselPlayState","mounted","setupCarousel","container","createElement","controls","append","className","forEach","item","index","carouselItem","src","imgItem","foodTitle","title","textContent","setAttribute","option","btn","axSpan","innerText","setControls","children","control","onclick","event","preventDefault","controlManager","dataset","name","previous","next","unshift","pop","push","shift","add","newItem","lastItem","length","lastIndex","findIndex","id","Object","assign","splice","play","playBtn","classList","contains","remove","clearInterval","setInterval","$5aa377cfc6a85567$var$count","$5aa377cfc6a85567$var$startIndex","$5aa377cfc6a85567$var$deleteCount","$5aa377cfc6a85567$var$recipeArrayList","$5aa377cfc6a85567$var$selectElement","getElementById","$5aa377cfc6a85567$var$arrowRight","$5aa377cfc6a85567$var$arrowLeft","$5aa377cfc6a85567$var$startingIndex","$5aa377cfc6a85567$var$endPageNumber","$5aa377cfc6a85567$var$searchButton","$5aa377cfc6a85567$var$searchInput","$5aa377cfc6a85567$var$spinner","$5aa377cfc6a85567$var$apiKey","$5aa377cfc6a85567$var$topRecipesUrl","$5aa377cfc6a85567$var$latestRecipesUrl","$5aa377cfc6a85567$var$fetchRecipes","topRecipe","latestRecipe","recipes","response1","fetch","response2","jsonData1","json","jsonData2","tRecipesList","searchResults","latestRecipesList","results","console","log","$5aa377cfc6a85567$var$displayTopRecipe","style","display","error","topRecipesContainer","Math","floor","removeChild","recipeCardContainer1","appendChild","topRecipesArray","slice","i","topRecipes","recipeCard","recipeContainer","recipeImg","image","alt","tag","dateActionsContainer","recipeDate","formattedDate","currentDate","Date","toLocaleDateString","day","month","year","actionButtonsContainer","chatButton","chatRight","shareButton","shareIcon","cardBody","cardTitle","cardText","recipeContent","content","readMore","href","link","recipeCardContainer","addEventListener","color","selectedText","selectedOption","options","selectedIndex","inputValue","value"],"version":3,"file":"index.7945b662.js.map"}