{"mappings":"AAAA,MAAM;IACF,YAAY,OAAO,CAAE;QACjB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,eAAe,GAAG;YAAC;YAAY;SAAO;QAC3C,IAAI,CAAC,YAAY,GAAG;YAChB;gBACI,MAAM;gBACN,OAAO;gBACP,SAAS;YACb;YACA;gBACI,MAAM;gBACN,OAAO;gBACP,SAAS;YACb;YACA;gBACI,MAAM;gBACN,OAAO;gBACP,SAAS;YACb;YACA;gBACI,MAAM;gBACN,OAAO;gBACP,SAAS;YACb;YACA;gBACI,MAAM;gBACN,OAAO;gBACP,SAAS;YACb;SACH;QACD,IAAI,CAAC,cAAc,GAAG;YAAC;YAAG;YAAG;YAAG;YAAG;SAAE;QACrC,IAAI,CAAC,iBAAiB;QACtB,IAAI,CAAC,iBAAiB;IAC1B;IAEA,UAAU;QACN,IAAI,CAAC,aAAa;IACtB;IAEA,sBAAsB;IACtB,gBAAgB;QACZ,MAAM,YAAY,SAAS,aAAa,CAAC;QACzC,MAAM,WAAW,SAAS,aAAa,CAAC;QAExC,gDAAgD;QAChD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW;QAC/B,UAAU,SAAS,GAAG;QACtB,SAAS,SAAS,GAAG;QAErB,mDAAmD;QACnD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM;YAC7B,MAAM,eAAe,KAAK,GAAG,GAAG,SAAS,aAAa,CAAC,SAAS;YAChE,MAAM,UAAU,SAAS,aAAa,CAAC;YACvC,MAAM,YAAY,KAAK,KAAK,GAAG,SAAS,aAAa,CAAC,QAAQ;YAC9D,aAAa,MAAM,CAAC,SAAS;YAC7B,UAAU,MAAM,CAAC;YAEjB,sBAAsB;YACtB,+BAA+B;YAC/B,UAAU,SAAS,GAAG,CAAC,qCAAqC,EAAE,QAAQ,EAAE,CAAC;YACzE,UAAU,WAAW,GAAG,KAAK,KAAK;YAClC,UAAU,YAAY,CAAC,WAAW;YAElC,QAAQ,SAAS,GAAG,CAAC,gCAAgC,EAAE,QAAQ,EAAE,CAAC;YAClE,QAAQ,GAAG,GAAG,KAAK,GAAG;YAEtB,aAAa,SAAS,GAAG,CAAC,0CAA0C,EAAE,QAAQ,EAAE,CAAC;YACjF,2DAA2D;YAC3D,+CAA+C;YAC/C,oDAAoD;YACpD,aAAa,YAAY,CAAC,WAAW;YACrC,yGAAyG;YACzG,aAAa,YAAY,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,CAAC;YACtD,UAAU,YAAY,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,CAAC;QACvD;QAEA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAC1B,MAAM,MAAM,SAAS,aAAa,CAAC;YACnC,MAAM,SAAS,SAAS,aAAa,CAAC;YAEtC,mCAAmC;YACnC,OAAO,SAAS,GAAG;YACnB,OAAO,SAAS,GAAG;YACnB,IAAI,MAAM,CAAC;YAEX,wBAAwB;YACxB,IAAI,SAAS,GAAG,CAAC,gDAAgD,EAAE,OAAO,CAAC;YAC3E,IAAI,YAAY,CAAC,aAAa;YAE9B,+BAA+B;YAC/B,SAAS,MAAM,CAAC;QACpB;QAEA,gFAAgF;QAChF,IAAI,CAAC,WAAW,CAAC;eAAI,SAAS,QAAQ;SAAC;QAEvC,yBAAyB;QACzB,IAAI,CAAC,iBAAiB,GAAG;QACzB,UAAU,MAAM,CAAC;IACrB;IAEA,YAAY,QAAQ,EAAE;QAClB,SAAS,OAAO,CAAC,CAAA;YACb,QAAQ,OAAO,GAAG,CAAC;gBACf,MAAM,cAAc;gBAEpB,6FAA6F;gBAC7F,IAAI,CAAC,cAAc,CAAC,QAAQ,OAAO,CAAC,IAAI;YAC5C;QACJ;IACJ;IAEA,eAAe,OAAO,EAAE;QACpB,IAAI,YAAY,YAAY,OAAO,IAAI,CAAC,QAAQ;QAChD,IAAI,YAAY,QAAQ,OAAO,IAAI,CAAC,IAAI;QACxC;IACJ;IAEA,WAAW;QACP,8DAA8D;QAC9D,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG;QAE/C,4FAA4F;QAC5F,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK;QAElD,sDAAsD;QACtD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,MAAM;YAC/B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,0CAA0C,EAAE,KAAK,CAAC;QAC1G;IAEA,oFAAoF;IACpF,2DAA2D;IAC3D,mFAAmF;IACnF,MAAM;IACV;IAEA,OAAO;QACH,8DAA8D;QAC9D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK;QAE9C,wGAAwG;QACxG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG;QAEnD,sDAAsD;QACtD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,MAAM;YAC/B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,0CAA0C,EAAE,KAAK,CAAC;QAC1G;IAEA,iFAAiF;IACjF,2DAA2D;IAC3D,+GAA+G;IAC/G,MAAM;IACV;IAEA,MAAM;QACF,MAAM,UAAU;YACZ,MAAM;YACN,OAAO;QACX;QACA,MAAM,WAAW,IAAI,CAAC,YAAY,CAAC,MAAM;QACzC,MAAM,YAAY,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAA,OAAQ,KAAK,EAAE,IAAI;QAEjE,0CAA0C;QAC1C,OAAO,MAAM,CAAC,SAAS;YACnB,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC;YACrB,KAAK,CAAC,4BAA4B,EAAE,WAAW,EAAE,CAAC;QACtD;QAEA,qDAAqD;QACrD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,GAAG,GAAG;QAE3C,qCAAqC;QACrC,IAAI,CAAC,IAAI;IACb;IAEA,OAAO;QACH,MAAM,UAAU,SAAS,aAAa,CAAC;QACvC,MAAM,eAAe,IAAM,IAAI,CAAC,IAAI;QAEpC,IAAI,QAAQ,SAAS,CAAC,QAAQ,CAAC,YAAY;YACvC,yDAAyD;YACzD,QAAQ,SAAS,CAAC,MAAM,CAAC;YAEzB,qBAAqB;YACrB,cAAc,IAAI,CAAC,iBAAiB;YACpC,IAAI,CAAC,iBAAiB,GAAG;QAC7B,OAAO;YACH,uDAAuD;YACvD,QAAQ,SAAS,CAAC,GAAG,CAAC;YAEtB,gCAAgC;YAChC,IAAI,CAAC,IAAI;YAET,wFAAwF;YACxF,IAAI,CAAC,iBAAiB,GAAG,YAAY,cAAc;QACvD;IACJ;AAEJ;AAEA,mHAAmH;AACnH,MAAM,UAAU,SAAS,aAAa,CAAC;AACvC,+BAA+B;AAC/B,MAAM,kBAAkB,IAAI,SAAS;AACrC,6BAA6B;AAC7B,gBAAgB,OAAO","sources":["js/carousel.js"],"sourcesContent":["class Carousel {\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.carouselOptions = ['previous', 'next'];\r\n        this.carouselData = [\r\n            {\r\n                'id': '1',\r\n                'src': 'https://randommer.io/images/foods/Caprese%20Salad.webp',\r\n                'title': 'Italiano Strawberry Smoothies Pancake',\r\n            },\r\n            {\r\n                'id': '2',\r\n                'src': 'https://randommer.io/images/foods/Huevos%20Rancheros.webp',\r\n                'title': 'Steak Beef With Padang Sauce',\r\n            },\r\n            {\r\n                'id': '3',\r\n                'src': 'https://randommer.io/images/foods/Chicken%20Tenders.webp',\r\n                'title': 'Jollibee With Tinola Sauce',\r\n            },\r\n            {\r\n                'id': '4',\r\n                'src': 'https://randommer.io/images/foods/Bento%20Box.webp',\r\n                'title': 'Inasal With Tinola Sauce',\r\n            },\r\n            {\r\n                'id': '5',\r\n                'src': 'https://randommer.io/images/foods/Veggie%20Sandwich.webp',\r\n                'title': 'McDo With Tinola Sauce',\r\n            }\r\n        ];\r\n        this.carouselInView = [1, 2, 3, 4, 5];\r\n        this.carouselContainer;\r\n        this.carouselPlayState;\r\n    }\r\n\r\n    mounted() {\r\n        this.setupCarousel();\r\n    }\r\n\r\n    // Build carousel html\r\n    setupCarousel() {\r\n        const container = document.createElement('div');\r\n        const controls = document.createElement('div');\r\n\r\n        // Add container for carousel items and controls\r\n        this.element.append(container, controls);\r\n        container.className = 'carousel-custom-container';\r\n        controls.className = 'carousel-custom-controls container';\r\n\r\n        // Take dataset array and append items to container\r\n        this.carouselData.forEach((item, index) => {\r\n            const carouselItem = item.src ? document.createElement('div') : null;\r\n            const imgItem = document.createElement('img');\r\n            const foodTitle = item.title ? document.createElement('h4') : null;\r\n            carouselItem.append(imgItem, foodTitle);\r\n            container.append(carouselItem);\r\n\r\n            // Add item attributes\r\n            // imgDiv.className = `imgDiv`;\r\n            foodTitle.className = `foodTitle-item foodTitle-custom-item-${index + 1}`\r\n            foodTitle.textContent = item.title;\r\n            foodTitle.setAttribute('loading', 'lazy');\r\n\r\n            imgItem.className = `imageItem imageItem-custom-item-${index + 1}`;\r\n            imgItem.src = item.src;\r\n\r\n            carouselItem.className = `carousel-custom-item carousel-custom-item-${index + 1}`;\r\n            // carouselItem.style.backgroundImage = `url(${item.src})`;\r\n            // carouselItem.style.backgroundSize = 'cover';\r\n            // carouselItem.style.backgroundPosition = 'center';\r\n            carouselItem.setAttribute('loading', 'lazy');\r\n            // Used to keep track of carousel items, infinite items possible in carousel however min 5 items required\r\n            carouselItem.setAttribute('data-index', `${index + 1}`);\r\n            foodTitle.setAttribute('data-index', `${index + 1}`);\r\n        });\r\n\r\n        this.carouselOptions.forEach((option) => {\r\n            const btn = document.createElement('button');\r\n            const axSpan = document.createElement('span');\r\n\r\n            // Add accessibilty spans to button\r\n            axSpan.innerText = option;\r\n            axSpan.className = 'ax-hidden';\r\n            btn.append(axSpan);\r\n\r\n            // Add button attributes\r\n            btn.className = `carousel-custom-control carousel-custom-control-${option}`;\r\n            btn.setAttribute('data-name', option);\r\n\r\n            // Add carousel control options\r\n            controls.append(btn);\r\n        });\r\n\r\n        // After rendering carousel to our DOM, setup carousel controls' event listeners\r\n        this.setControls([...controls.children]);\r\n\r\n        // Set container property\r\n        this.carouselContainer = container;\r\n        container.append(controls);\r\n    }\r\n\r\n    setControls(controls) {\r\n        controls.forEach(control => {\r\n            control.onclick = (event) => {\r\n                event.preventDefault();\r\n\r\n                // Manage control actions, update our carousel data first then with a callback update our DOM\r\n                this.controlManager(control.dataset.name);\r\n            };\r\n        });\r\n    }\r\n\r\n    controlManager(control) {\r\n        if (control === 'previous') return this.previous();\r\n        if (control === 'next') return this.next();\r\n        return;\r\n    }\r\n\r\n    previous() {\r\n        // Update order of items in data array to be shown in carousel\r\n        this.carouselData.unshift(this.carouselData.pop());\r\n\r\n        // Push the first item to the end of the array so that the previous item is front and center\r\n        this.carouselInView.push(this.carouselInView.shift());\r\n\r\n        // Update the css class for each carousel item in view\r\n        this.carouselInView.forEach((item, index) => {\r\n            this.carouselContainer.children[index].className = `carousel-custom-item carousel-custom-item-${item}`;\r\n        });\r\n\r\n        // // Using the first 5 items in data array update content of carousel items in view\r\n        // this.carouselData.slice(0, 5).forEach((data, index) => {\r\n        //     document.querySelector(`.carousel-custom-item-${index + 1}`).src = data.src;\r\n        // });\r\n    }\r\n\r\n    next() {\r\n        // Update order of items in data array to be shown in carousel\r\n        this.carouselData.push(this.carouselData.shift());\r\n\r\n        // Take the last item and add it to the beginning of the array so that the next item is front and center\r\n        this.carouselInView.unshift(this.carouselInView.pop());\r\n\r\n        // Update the css class for each carousel item in view\r\n        this.carouselInView.forEach((item, index) => {\r\n            this.carouselContainer.children[index].className = `carousel-custom-item carousel-custom-item-${item}`;\r\n        });\r\n\r\n        // Using the first 5 items in data array update content of carousel items in view\r\n        // this.carouselData.slice(0, 5).forEach((data, index) => {\r\n        //     document.querySelector(`.carousel-custom-item-${index + 1}`).style.backgroundImage = `url(${data.src})`;\r\n        // });\r\n    }\r\n\r\n    add() {\r\n        const newItem = {\r\n            'id': '',\r\n            'src': '',\r\n        };\r\n        const lastItem = this.carouselData.length;\r\n        const lastIndex = this.carouselData.findIndex(item => item.id == lastItem);\r\n\r\n        // Assign properties for new carousel item\r\n        Object.assign(newItem, {\r\n            id: `${lastItem + 1}`,\r\n            src: `http://fakeimg.pl/300/?text=${lastItem + 1}`\r\n        });\r\n\r\n        // Then add it to the \"last\" item in our carouselData\r\n        this.carouselData.splice(lastIndex + 1, 0, newItem);\r\n\r\n        // Shift carousel to display new item\r\n        this.next();\r\n    }\r\n\r\n    play() {\r\n        const playBtn = document.querySelector('.carousel-custom-control-play');\r\n        const startPlaying = () => this.next();\r\n\r\n        if (playBtn.classList.contains('playing')) {\r\n            // Remove class to return to play button state/appearance\r\n            playBtn.classList.remove('playing');\r\n\r\n            // Remove setInterval\r\n            clearInterval(this.carouselPlayState);\r\n            this.carouselPlayState = null;\r\n        } else {\r\n            // Add class to change to pause button state/appearance\r\n            playBtn.classList.add('playing');\r\n\r\n            // First run initial next method\r\n            this.next();\r\n\r\n            // Use play state prop to store interval ID and run next method on a 1.5 second interval\r\n            this.carouselPlayState = setInterval(startPlaying, 1500);\r\n        };\r\n    }\r\n\r\n}\r\n\r\n// Refers to the carousel root element you want to target, use specific class selectors if using multiple carousels\r\nconst element = document.querySelector('.carousel-custom');\r\n// Create a new carousel object\r\nconst exampleCarousel = new Carousel(element);\r\n// Setup carousel and methods\r\nexampleCarousel.mounted();\r\n"],"names":[],"version":3,"file":"index.b4e3f4fa.js.map","sourceRoot":"/__parcel_source_root/"}